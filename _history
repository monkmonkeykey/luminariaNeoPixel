{"entries":[{"timestamp":1748715979850,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables><variable id=\"2lJ/I=ZF*@!a$9v~i6d[\">actual</variable><variable id=\"-TFm43u+H879Db6|!}6#\">strip</variable></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"radio_set_group\"><value name=\"ID\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Id\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow></value><next><block type=\"serial_redirect_to_usb\"><next><block type=\"variables_set\"><field name=\"VAR\" id=\"2lJ/I=ZF*@!a$9v~i6d[\">actual</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"-TFm43u+H879Db6|!}6#\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">64</field></shadow></value></block></value></block></next></block></next></block></next></block></statement></block><block type=\"device_forever\" x=\"701\" y=\"-2\"><statement name=\"HANDLER\"><block type=\"radio_datagram_send\"><value name=\"value\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"device_acceleration\"><field name=\"NAME\">Dimension.X</field></block></value><next><block type=\"device_show_number\"><value name=\"number\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"2lJ/I=ZF*@!a$9v~i6d[\">actual</field></block></value></block></next></block></statement></block><block type=\"radio_on_number_drag\" x=\"186\" y=\"462\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"2lJ/I=ZF*@!a$9v~i6d[\">actual</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">receivedNumber</field></block></value><next><block type=\"serial_writenumber\"><value name=\"value\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">receivedNumber</field></block></value></block></next></block></statement></block>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[0,"</xm"]],"start1":12,"start2":12,"length1":2464,"length2":113}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"radio.on()\nradio.setGroup(1)\nserial.redirectToUSB()\nlet strip = neopixel.create(DigitalPin.P0, 64, NeoPixelMode.RGB)\nlet actual = 0\nradio.onReceivedNumber(function on_received_number(receivedNumber: number) {\n    let color: number;\n    \n    actual = Math.abs(receivedNumber)\n    //  Mostrar por serial como texto simple\n    serial.writeLine(\"Movimiento: \" + (\"\" + actual))\n    //  Nivel de movimiento en escala de 0 a 10\n    let nivel = Math.idiv(actual, 100)\n    if (nivel > 10) {\n        nivel = 10\n    }\n    \n    //  Color según nivel\n    if (nivel < 3) {\n        color = neopixel.rgb(0, 0, 150)\n    } else if (nivel < 7) {\n        //  Azul\n        color = neopixel.rgb(150, 75, 0)\n    } else {\n        //  Intermedio\n        color = neopixel.rgb(150, 0, 0)\n    }\n    \n    //  Rojo\n    //  Pintar toda la tira del color elegido\n    for (let i = 0; i < 64; i++) {\n        strip.setPixelColor(i, color)\n    }\n    strip.show()\n})\nbasic.forever(function on_forever() {\n    let movimiento = input.acceleration(Dimension.X)\n    radio.sendNumber(movimiento)\n    basic.pause(100)\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":1078,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\""],[0,"\n   "]],"start1":130,"start2":130,"length1":68,"length2":8},{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":214,"start2":214,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"from microbit import *\nimport neopixel\nimport radio\n\nradio.on()\nradio.set_group(1)\nserial.redirect_to_usb()\n\nstrip = neopixel.create(DigitalPin.P0, 64, NeoPixelMode.RGB)\nactual = 0\n\ndef on_received_number(receivedNumber):\n    global actual\n    actual = abs(receivedNumber)\n\n    # Mostrar por serial como texto simple\n    serial.write_line(\"Movimiento: \" + str(actual))\n\n    # Nivel de movimiento en escala de 0 a 10\n    nivel = actual // 100\n    if nivel > 10:\n        nivel = 10\n\n    # Color según nivel\n    if nivel < 3:\n        color = neopixel.rgb(0, 0, 150)  # Azul\n    elif nivel < 7:\n        color = neopixel.rgb(150, 75, 0)  # Intermedio\n    else:\n        color = neopixel.rgb(150, 0, 0)  # Rojo\n\n    # Pintar toda la tira del color elegido\n    for i in range(64):\n        strip.set_pixel_color(i, color)\n    strip.show()\n\nradio.on_received_number(on_received_number)\n\ndef on_forever():\n    movimiento = input.acceleration(Dimension.X)\n    radio.send_number(movimiento)\n    basic.pause(100)\n\nbasic.forever(on_forever)\n"}]},{"timestamp":1748716597972,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"to)\n"],[-1,"    basic.show_number(0)\n"],[0,"    "]],"start1":974,"start2":974,"length1":33,"length2":8}]}]},{"timestamp":1748716612779,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"de.RGB)\n"],[1,"let actual = 0\n"],[0,"radio.on"]],"start1":109,"start2":109,"length1":16,"length2":31},{"diffs":[[0,"Received"],[-1,"String"],[1,"Number"],[0,"(functio"]],"start1":140,"start2":140,"length1":22,"length2":22},{"diffs":[[0,"eceived_"],[-1,"string"],[1,"number"],[0,"(receive"]],"start1":168,"start2":168,"length1":22,"length2":22},{"diffs":[[0,"ived"],[-1,"String: string) {\n    let x: number;\n    let y: number;\n    let z: number;"],[1,"Number: number) {"],[0,"\n   "]],"start1":187,"start2":187,"length1":82,"length2":25},{"diffs":[[0,"    let "],[-1,"total"],[1,"color"],[0,": number"]],"start1":209,"start2":209,"length1":21,"length2":21},{"diffs":[[0,"    "],[-1,"let reposo: number;\n    let delta: number;\n    let nivel: n"],[1,"\n    actual = Math.abs(receivedN"],[0,"umber"],[-1,";"],[1,")"],[0,"\n    "],[-1,"let color: number;\n    let parts = _py.py_string_split(receivedString, \",\")\n    if (parts.length == 3) {\n        try {\n            x = parseInt(parts[0])\n            y = parseInt(parts[1])\n            z = parseInt(parts[2])\n            //  Calculamos movimiento total sin usar sqrt\n            total = x * x + y * y + z * z\n            reposo = 1024 * 1024\n            delta = Math.abs(total - reposo)\n            //  Escalamos a un nivel entr"],[1,"//  Mostrar por serial como texto simple\n    serial.writeLine(\"Movimiento: \" + (\"\" + actual))\n    //  Nivel de movimiento en escala d"],[0,"e 0 "],[-1,"y"],[1,"a"],[0," 10\n    "],[-1,"       "],[1,"let"],[0," niv"]],"start1":232,"start2":232,"length1":541,"length2":200},{"diffs":[[0,"div("],[-1,"delta, 50000)\n        "],[1,"actual, 100)\n"],[0,"    "]],"start1":443,"start2":443,"length1":30,"length2":21},{"diffs":[[0,"        "],[-1,"   "],[-1,"     "],[0,"nivel = "]],"start1":482,"start2":482,"length1":24,"length2":16},{"diffs":[[0,"el = 10\n"],[-1,"        "],[0,"    }\n  "]],"start1":493,"start2":493,"length1":24,"length2":16},{"diffs":[[0,"    "],[-1,"        \n            //  Mostrar nivel en pantalla y por serial\n            basic.showNumber(nivel)\n            serial.writeLine(\"Nivel: \" + (\"\" + nivel))\n        "],[1,"\n"],[0,"    "]],"start1":507,"start2":507,"length1":171,"length2":9},{"diffs":[[0,"n nivel\n"],[-1,"        "],[0,"    if ("]],"start1":530,"start2":530,"length1":24,"length2":16},{"diffs":[[0,") {\n        "],[-1,"  "],[-1,"      "],[0,"color = neop"]],"start1":555,"start2":555,"length1":32,"length2":24},{"diffs":[[0,"0, 150)\n"],[-1,"        "],[0,"    } el"]],"start1":591,"start2":591,"length1":24,"length2":16},{"diffs":[[0,") {\n        "],[-1,"    "],[-1,"    "],[0,"//  Azul\n   "]],"start1":623,"start2":623,"length1":32,"length2":24},{"diffs":[[0,"/  Azul\n"],[-1,"        "],[0,"        "]],"start1":636,"start2":636,"length1":24,"length2":16},{"diffs":[[0,"150, 75, 0)\n"],[-1,"        "],[0,"    } else {"]],"start1":673,"start2":673,"length1":32,"length2":24},{"diffs":[[0,"e {\n        "],[-1,"      "],[-1,"  "],[0,"//  Intermed"]],"start1":694,"start2":694,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"       "],[-1," "],[0,"color = "]],"start1":721,"start2":721,"length1":24,"length2":16},{"diffs":[[0,"    "],[-1,"        }\n            \n            //  Rojo\n        "],[1,"}\n    \n    //  Rojo\n    //  Pintar toda la tira del color elegido\n"],[0,"    "]],"start1":761,"start2":761,"length1":60,"length2":74},{"diffs":[[0," 64; i++) {\n"],[-1,"        "],[0,"        stri"]],"start1":854,"start2":854,"length1":32,"length2":24},{"diffs":[[0,"    "],[-1,"        }\n            strip.show()\n        }\n        catch (_) {\n            basic.showString(\"?\")\n        }\n        \n    }\n    \n})\nbasic.forever(function on_forever() {"],[1,"}\n    strip.show()\n})\nbasic.forever(function on_forever() {\n    let movimiento = input.acceleration(Dimension.X)\n    radio.sendNumber(movimiento)"],[0,"\n   "]],"start1":904,"start2":904,"length1":177,"length2":153}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ort "],[-1,"radio\nimport neopixel"],[1,"neopixel\nimport radio"],[0,"\n\nra"]],"start1":26,"start2":26,"length1":29,"length2":29},{"diffs":[[0,"ode.RGB)"],[1,"\nactual = 0"],[0,"\n\ndef on"]],"start1":161,"start2":161,"length1":16,"length2":27},{"diffs":[[0,"eceived_"],[-1,"string"],[1,"number"],[0,"(receive"]],"start1":190,"start2":190,"length1":22,"length2":22},{"diffs":[[0,"ived"],[-1,"String"],[1,"Number"],[0,"):\n    "],[-1,"parts = receivedString.split(\",\")\n    if len(parts) == 3:\n        try:\n            x = int(parts[0])\n            y = int(parts[1])\n            z = int(parts[2])\n\n            # Calculamos movimiento total sin usar sqrt\n            total = x * x + y * y + z * z\n            reposo = 1024 * 1024\n            delta = abs(total - reposo)\n\n            # Escalamos a un nivel entr"],[1,"global actual\n    actual = abs(receivedNumber)\n\n    # Mostrar por serial como texto simple\n    serial.write_line(\"Movimiento: \" + str(actual))\n\n    # Nivel de movimiento en escala d"],[0,"e 0 "],[-1,"y"],[1,"a"],[0," 10\n"],[-1,"        "],[0,"    "]],"start1":209,"start2":209,"length1":411,"length2":211},{"diffs":[[0,"l = "],[-1,"delta"],[1,"actual"],[0," // "],[-1,"50"],[1,"1"],[0,"00"],[-1,"0"],[0,"\n"],[-1,"        "],[0,"    "]],"start1":424,"start2":424,"length1":31,"length2":22},{"diffs":[[0,"        "],[-1,"    "],[-1,"    "],[0,"nivel = "]],"start1":461,"start2":461,"length1":24,"length2":16},{"diffs":[[0,"10\n\n"],[-1,"            # Mostrar nivel en pantalla y por serial\n            basic.show_number(nivel)\n            serial.write_line(\"Nivel: \" + str(nivel))\n\n        "],[0,"    "]],"start1":477,"start2":477,"length1":161,"length2":8},{"diffs":[[0,"n nivel\n"],[-1,"        "],[0,"    if n"]],"start1":497,"start2":497,"length1":24,"length2":16},{"diffs":[[0,"el < 3:\n"],[-1,"        "],[0,"        "]],"start1":515,"start2":515,"length1":24,"length2":16},{"diffs":[[0," # Azul\n"],[-1,"        "],[0,"    elif"]],"start1":563,"start2":563,"length1":24,"length2":16},{"diffs":[[0," 7:\n        "],[-1,"       "],[-1," "],[0,"color = neop"]],"start1":587,"start2":587,"length1":32,"length2":24},{"diffs":[[0,"ermedio\n"],[-1,"        "],[0,"    else"]],"start1":638,"start2":638,"length1":24,"length2":16},{"diffs":[[0,"        "],[-1,"     "],[-1,"   "],[0,"color = "]],"start1":656,"start2":656,"length1":24,"length2":16},{"diffs":[[0,"# Rojo\n\n    "],[-1,"    "],[1,"# Pintar toda la tira del color elegido\n"],[0,"    for i in"]],"start1":697,"start2":697,"length1":28,"length2":64},{"diffs":[[0,"4):\n        "],[-1,"  "],[-1,"      "],[0,"strip.set_pi"]],"start1":769,"start2":769,"length1":32,"length2":24},{"diffs":[[0," color)\n"],[-1,"        "],[0,"    stri"]],"start1":805,"start2":805,"length1":24,"length2":16},{"diffs":[[0,"()\n\n"],[-1,"        except:\n            basic.show_string(\"?\")\n\n"],[0,"radi"]],"start1":827,"start2":827,"length1":60,"length2":8},{"diffs":[[0,"eceived_"],[-1,"string"],[1,"number"],[0,"(on_rece"]],"start1":841,"start2":841,"length1":22,"length2":22},{"diffs":[[0,"ved_"],[-1,"string"],[1,"number"],[0,")\n\nd"]],"start1":864,"start2":864,"length1":14,"length2":14},{"diffs":[[0,"ever():\n"],[1,"    movimiento = input.acceleration(Dimension.X)\n    radio.send_number(movimiento)\n    basic.show_number(0)\n"],[0,"    basi"]],"start1":887,"start2":887,"length1":16,"length2":124}]}]},{"timestamp":1748717170167,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"radio_set_group\"><value name=\"ID\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Id\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow></value><next><block type=\"serial_redirect_to_usb\"><next><block type=\"variables_set\"><field name=\"VAR\" id=\"2lJ/I=ZF*@!a$9v~i6d[\">actual</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"-TFm43u+H879Db6|!}6#\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">64</field></shadow></value></block></value></block></next></block></next></block></next></block></statement></block><block type=\"device_forever\" x=\"701\" y=\"-2\"><statement name=\"HANDLER\"><block type=\"radio_datagram_send\"><value name=\"value\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"device_acceleration\"><field name=\"NAME\">Dimension.X</field></block></value><next><block type=\"device_show_number\"><value name=\"number\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"2lJ/I=ZF*@!a$9v~i6d[\">actual</field></block></value></block></next></block></statement></block><block type=\"radio_on_number_drag\" x=\"186\" y=\"462\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"2lJ/I=ZF*@!a$9v~i6d[\">actual</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">receivedNumber</field></block></value><next><block type=\"serial_writenumber\"><value name=\"value\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">receivedNumber</field></block></value></block></next></block></statement></block><"],[0,"/xml>"]],"start1":176,"start2":176,"length1":13,"length2":2302}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"        "],[-1," //"],[0," basic.s"]],"start1":986,"start2":986,"length1":19,"length2":16},{"diffs":[[0,"show"],[-1,"_n"],[1,"N"],[0,"umbe"]],"start1":1001,"start2":1001,"length1":10,"length2":9},{"diffs":[[0,"        "],[-1," //"],[0," serial."]],"start1":1022,"start2":1022,"length1":19,"length2":16},{"diffs":[[0,"rite"],[-1,"_l"],[1,"L"],[0,"ine("]],"start1":1039,"start2":1039,"length1":10,"length2":9},{"diffs":[[0,"\" + "],[-1,"str("],[1,"(\"\" + "],[0,"nive"]],"start1":1056,"start2":1056,"length1":12,"length2":14},{"diffs":[[0,"pause(10"],[1,"0"],[0,")\n})\n"]],"start1":1716,"start2":1716,"length1":13,"length2":14}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":301,"start2":301,"length1":52,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"        "],[-1,"#"],[0,"basic.sh"]],"start1":744,"start2":744,"length1":17,"length2":16},{"diffs":[[0,"        "],[-1,"#"],[0,"serial.w"]],"start1":781,"start2":781,"length1":17,"length2":16},{"diffs":[[0,"pause(10"],[1,"0"],[0,")\n\nbasic"]],"start1":1344,"start2":1344,"length1":16,"length2":17}]},{"type":"added","filename":"test.ts","value":"// aquí va el archivo \"tests\"; esto no se compilará cuando este paquete se utilice como una extensión.\n"}]}],"snapshots":[{"timestamp":1748715979849,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"n|x\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1748717631129}